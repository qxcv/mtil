gail-trans-jitter:
  algo: gail
  multi: false
  args:
    # settings to minimise cost & risk
    transfer_pol_batch_weight: 1.0
    transfer_loss_weight: 0.1
    total_n_steps: 2000000
    disc_up_per_iter: 4
    snapshot_gap: 20
  env-subset: ["move-to-corner", "move-to-region", "match-regions", "find-dupe", "fix-colour"]
  transfer-variants:
    - TestJitter

gail-trans-shape:
  algo: gail
  multi: false
  args:
    transfer_pol_batch_weight: 1.0
    transfer_loss_weight: 0.1
    total_n_steps: 2000000
    disc_up_per_iter: 4
    snapshot_gap: 20
  env-subset: ["move-to-corner", "move-to-region", "match-regions", "find-dupe", "fix-colour"]
  transfer-variants:
    - TestShape

gail-trans-colour:
  algo: gail
  multi: false
  args:
    transfer_pol_batch_weight: 1.0
    transfer_loss_weight: 0.1
    total_n_steps: 2000000
    disc_up_per_iter: 4
    snapshot_gap: 20
  env-subset: ["move-to-corner", "move-to-region", "match-regions", "find-dupe", "fix-colour"]
  transfer-variants:
    - TestColour

gail-trans-layout:
  algo: gail
  multi: false
  args:
    transfer_pol_batch_weight: 1.0
    transfer_loss_weight: 0.1
    total_n_steps: 2000000
    disc_up_per_iter: 4
    snapshot_gap: 20
  env-subset: ["move-to-corner", "move-to-region", "match-regions", "find-dupe", "fix-colour"]
  transfer-variants:
    - TestLayout

# To make GAIL cheap, append this:
#   args:
#     total_n_steps: 4096
#     snapshot_gap: 1

# To make BC cheap, append this:
#   args:
#     total_n_batches: 1
#     eval_every_n_batches: 1
#     eval_n_traj: 5
